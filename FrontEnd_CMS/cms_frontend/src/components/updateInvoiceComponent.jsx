import React, { useEffect, useState } from "react";
import { useParams, useNavigate, useLocation } from "react-router-dom";
import ClientService from "../services/ClientService";
import "../css/updateClientComponent.css";
import InvoiceService from "../services/InvoiceService";
const UpdateInvoiceComponent = () => {
  const location = useLocation();
  const { id } = useParams();
  const { clientId, clientName } = location.state;
  const navigate = useNavigate();
  const [invoiceData, setInvoiceData] = useState({
    invoiceId: "", // Autogenerated invoice ID,
    clientId,
    clientName,
    amount: "",
    currency: "",
    selectedBankAccount: "",
    description: "",
    header: "",
    date: "" || new Date().toISOString().slice(0, 10), // Current date
  });
  console.log(id);

  useEffect(() => {
    console.log(id);
    fetchInvoice();
  }, []);

  const fetchInvoice = () => {
    console.log(id);
    InvoiceService.getInvoiceById(id)

      .then((response) => {
        setInvoiceData(response.data);
      })
      .catch((error) => {
        console.error("Error fetching client: ", error);
      });
  };

  const updateInvoice = () => {
    const { ...invoice } = invoice;
    InvoiceService.updateInvoice(id, invoiceData)
      .then((response) => {
        console.log("Invoice updated successfully: ", response.data);
        navigate(`/ClientManagement/readService/listAllInvoices`);
      })
      .catch((error) => {
        console.log("Error updating invoice: ", error);
      });
  };

  const handleInputChange = (event) => {
    const { name, value } = event.target;
    setInvoiceData({ ...invoiceData, [name]: value });
  };

  return (
    <div className="update-client-container">
      <h2 className="update-client-heading">Update Client</h2>
      <form className="update-client-form">
        <div className="form-group">
          <label className="form-label">Name:</label>
          <input
            type="text"
            name="name"
            value={invoiceData.name}
            onChange={handleInputChange}
            className="form-input"
          />
        </div>
        <div className="form-group">
          <label className="form-label">Main Contact Person: </label>
          <input
            type="text"
            name="mainContactPerson"
            value={invoiceData.mainContactPerson}
            onChange={handleInputChange}
            className="form-input"
          />
        </div>
        <div className="form-group">
          <label className="form-label">Address: </label>
          <input
            type="text"
            name="address"
            value={invoiceData.address}
            onChange={handleInputChange}
            className="form-input"
          />
        </div>
        <div className="form-group">
          <label className="form-label">City: </label>
          <input
            type="text"
            name="city"
            value={invoiceData.city}
            onChange={handleInputChange}
            className="form-input"
          />
        </div>
        <div className="form-group">
          <label className="form-label">Country: </label>
          <input
            type="text"
            name="country"
            value={invoiceData.country}
            onChange={handleInputChange}
            className="form-input"
          />
        </div>
        <div className="form-group">
          <label className="form-label">GST-Number: </label>
          <input
            type="text"
            name="gstNumber"
            value={invoiceData.gstNumber}
            onChange={handleInputChange}
            className="form-input"
          />
        </div>
        <div className="form-group">
          <label className="form-label">Email: </label>
          <input
            type="text"
            name="email"
            value={invoiceData.email}
            onChange={handleInputChange}
            className="form-input"
          />
        </div>
        <div className="form-group">
          <label className="form-label">Phone: </label>
          <input
            type="text"
            name="phone"
            value={invoiceData.phone}
            onChange={handleInputChange}
            className="form-input"
          />
        </div>
        <button
          type="button"
          onClick={updateInvoice}
          className="update-client-button"
        >
          Update Client
        </button>
      </form>
    </div>
  );
};

export default UpdateInvoiceComponent;
